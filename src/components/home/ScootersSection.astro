---
import ProductCard from "../ProductCard.astro";

interface Items {
  title: string;
  description: string;
  image: string;
  url: string;
  customClass?: string;
}

// const ProductItems : Items[] = [
//   {
//     title: "Mixtera G10",
//     description: "Sandwiches perfectos",
//     image: "/newVersion/mixtera-1.png",
//     url: "/productos/mixteras",
//   },
//   {
//     title: "Mixtera G20",
//     description: "Con un toque especial",
//     image: "/newVersion/mixtera-2.png",
//     url: "/productos/mixteras",
//   },
//   {
//     title: "Mixtera G30",
//     description: "Creaciones únicas",
//     image: "/newVersion/mixtera-3.png",
//     url: "/productos/mixteras",
//   },
//   {
//     title: "Mixtera G40",
//     description: "Más opciones, más sabor",
//     image: "/newVersion/mixtera-4.png",
//     url: "/productos/mixteras",
//   },
//   {
//     title: "Mixtera G50",
//     description: "Multiplica tus opciones",
//     image: "/newVersion/mixtera-5.png",
//     url: "/productos/mixteras",
//   },

// ]
---

<section
  class="flex  flex-col-reverse lg:flex-row overflow-hidden justify-center p-10 gap-10 items-center lg:justify-between  relative lg:p-20  bg-interbrasGreen-500 w-[90%] lg:w-[80%] mx-auto rounded-[70px] "
>

  <div class=" relative z-10 mt-auto flex gap-5 flex-col">
    <div class=" bg-black w-full h-full  z-[-1] opacity-20 absolute top-0 left-0 right-0 bottom-0 blur-3xl" />
    <h2 class="text-4xl font-bold text-balance text-white">
      Scooters Interbras
    </h2>

    <p class="w-full max-w-lg text-white leading-5 -mt-2">
      Conoce nuestra línea de scooters Interbras, la mejor opción para
      movilizarte en la ciudad.
    </p>

    <a
      href="/productos/scooters"
      class=" text-interbrasGreen-500 items-center justify-between bg-white flex p-2 pl-4 font-semibold rounded-xl shadow-xl"
    >
      <span>Ver más</span>

      <div class=" size-8 bg-interbrasGreen-500 flex justify-center items-center rounded-xl">
        <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6 text-white"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M9 5l7 7-7 7"
        />
      </svg>
      </div>

    </a>

  </div>

  <img src="/newVersion/scooter.svg" class=" absolute opacity-[.08] top-14 left-10 scale-[1.45]" alt="icons scooter">

  <div
    id="contain"
    class="bg-interbrasGreen-900 w-full lg:size-96 rounded-[50px] relative flex"
  >
    <img
      id="photo"
      src="/productos/scooters/8.5-v1-1.webp"
      alt="scooter"
      class="lg:size-96 size-full absolute top-1/2 -translate-y-1/2 object-cover p-10"
    />

    <div class="flex items-center w-full justify-between mt-[90%] relative z-10 flex-1">
      <button
        class="bg-white p-2 rounded-full cursor-pointer"
        id="prev"
        aria-label="Previous scooter"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6 text-interbrasGreen-500"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M15 19l-7-7 7-7"
          />
        </svg>
      </button>

      <a 
        href="/productos/scooters"
        class="text-white bg-interbrasGreen-800 px-4 py-1 lg:mt-5 rounded-xl shadow-xl" id="currendIndex">
        Scooter 8.5
      </a>

      <button
        class="bg-white p-2 rounded-full cursor-pointer"
        id="next"
        aria-label="Next scooter"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6 text-interbrasGreen-500 poinno"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 5l7 7-7 7"
          />
        </svg>
      </button>
    </div>
    
  </div>

</section>

<script>
  interface Items {
    title: string;
    description: string;
    image: string;
    url: string;
    customClass?: string;
  }

  const scooters = [
    {
      title: "Scooter 8.5",
      description: "Scooter 8.5",
      image: "/productos/scooters/8.5-v1-1.webp",
      url: "/productos/scooters",
    },
    {
      title: "Scooter 10",
      description: "Scooter 10",
      image: "/productos/scooters/10.5pro-v1-1.webp",
      url: "/productos/scooters",
    },
    {
      title: "Scooter 10.5",
      description: "Scooter 10.5",
      image: "/productos/scooters/cross-v1-1.webp",
      url: "/productos/scooters",
    },
    {
      title: "Scooter 12",
      description: "Scooter 12",
      image: "/productos/scooters/crosspro-v1-1.webp",
      url: "/productos/scooters",
    },
  ];

  let currentIndex = 0;
  let scooterChangeInterval: any;

  const getNextIndex = (index: number, scooters: Items[]) => {
    return index + 1 === scooters.length ? 0 : index + 1;
  };

  const getPrevIndex = (index: number, scooters: Items[]) => {
    return index === 0 ? scooters.length - 1 : index - 1;
  };
  
  const changePhoto = ({
    index,
    scooters,
  }: {
    index: number;
    scooters: Items[];
  }) => {

    const currendIndex = document.getElementById("currendIndex");
    if (currendIndex) currendIndex.innerText = scooters[index].title;

    const photo = document.getElementById("photo");
    if (!photo) return;

    const photoCopy = photo.cloneNode(true) as HTMLImageElement;

    photoCopy.src = scooters[index].image;
    photoCopy.id = "photo";
    photoCopy.style.zIndex = "1";
    photoCopy.classList.add("size-96");
    photoCopy.classList.add("absolute");
    photoCopy.classList.add("top-1/2");
    photoCopy.classList.add("-translate-y-1/2");
    photoCopy.classList.add("object-cover");
    photoCopy.classList.add("p-10");
    photoCopy.style.animation = "inContainer 1s ease forwards";
    photo.style.zIndex = "0";
    
    photo.remove();
    document.getElementById("contain")?.appendChild(photoCopy);


  };

  const goToNext = ({ index }: { index: number }) => {
    index = getNextIndex(index, scooters);
    changePhoto({ index, scooters });
    return index;
  };

  const goToPrev = ({ index }: { index: number }) => {
    index = getPrevIndex(index, scooters);
    changePhoto({ index, scooters });
    return index;
  };

  scooterChangeInterval = setInterval(() => {
    currentIndex = goToNext({ index: currentIndex });
  }, 3000);

  const prev = document.getElementById("prev");
  const next = document.getElementById("next");

  prev?.addEventListener("click", () => {
    if (scooterChangeInterval) clearInterval(scooterChangeInterval);
    currentIndex = goToPrev({ index: currentIndex });
  });

  next?.addEventListener("click", () => {
    if (scooterChangeInterval) clearInterval(scooterChangeInterval);
    currentIndex = goToNext({ index: currentIndex });
  });

</script>

<style is:global>
  @keyframes outContainer {
    from {
      transform: translateY(-50%);
    }
    to {
      transform: translateY(calc(-50% + 30px));
      opacity: 0;
    }
  }

  @keyframes inContainer {
    from {
      transform: translateY(calc(-50% + 30px));
      opacity: 0;
    }
    to {
      transform: translateY(-50%);
    }
  }
</style>
