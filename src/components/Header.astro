---
import Logo from "@/components/Logo.astro";

import WhereWeAreSection from "@/components/WhereWeAreSection.astro";
import WeProductsSection from "@/components/WeProductsSection.astro";
import WhoWeAreSection from "@/components/WhoWeAreSection.astro";
import SwitchButton from "@/components/SwitchButton.astro";
import { getRelativeLocaleUrl } from "astro:i18n";
import { MobileNav } from "./react/MobileNav";
import { getI18NGlobal, getValueFromKey } from "@/i18n";

const { currentLocale } = Astro;
const i18n = getI18NGlobal({ currentLocale });

const t = (key: string) => {
  return getValueFromKey(key, i18n);
};

---


<header
  transition:persist="true"
  id="header-client"
  class="fixed w-full shadow-xl z-[40] flex flex-col min-h-20 pt-5 transition-all backdrop-blur bg-interbrasGreen-500 text-white"
>
  <nav class="w-full flex relative">
    <div class="absolute right-3 lg:right-8 top-1/2 -translate-y-1/2">
      <div class="relative z-40">
        <SwitchButton />
      </div>
    </div>
    <ul
      class="flex mx-auto justify-center text-nowrap items-center gap-14 w-full"
    >
    <li class="w-full flex max-w-96 justify-end gap-8">
      <div class="lg:block hidden">
        <button id="whereWeAre">{t('header.whereWeAre.title')}</button>
      </div>
      <div class="lg:block hidden">
        <button id="weProducts">{t('header.products.title')}</button>
      </div>
    </li>
      <li>
        <a hreflang={currentLocale === "pt" ? "pt-BR" : currentLocale || "es"} 
          aria-label="Logo Interbras"
          class="cursor-pointer"
          href={getRelativeLocaleUrl(currentLocale || "es", "/")}
          hreflang={currentLocale === "pt" ? "pt-BR" : currentLocale || "es"}
        >
          <Logo />
        </a>
      </li>
      <li class="w-full flex max-w-96 justify-start gap-8">
        <div class="lg:block hidden">
          <a hreflang={currentLocale === "pt" ? "pt-BR" : currentLocale || "es"}  href={getRelativeLocaleUrl(currentLocale || "", "/downloads")}>
            <p>{t('header.download')}</p>
          </a>
        </div>
        <div class="lg:block hidden">
          <button id="whoWeAre">{t('header.whoWeAre.title')}</button>
        </div>
      </li>
    </ul>
  </nav>
  <div id="section-nav-items" class="transition-all h-0 duration-700">
    <WhereWeAreSection />
    <WeProductsSection />
    <WhoWeAreSection />
  </div>

  
<MobileNav client:only="react" />

</header>

<script is:inline >
  const initHeaderScript = () => {
    let selectedNavItem = null;
    const sectionNavItems = document.getElementById("section-nav-items");
    const whereWeAre = document.getElementById("whereWeAre");
    const whereWeAreSection = document.getElementById("WhereWeAreSection");
    const headerClient = document.getElementById("header-client");
    const whoWeAre = document.getElementById("whoWeAre");
    const weProducts = document.getElementById("weProducts");
    const updateSelectedNavItem = () => {
      const selectedNavItemHidden = document.querySelector(
        "#section-nav-items > div:not(.hidden)",
      );
      if (selectedNavItemHidden) {
        selectedNavItemHidden.classList.add("hidden");
        selectedNavItemHidden.classList.remove("flex");
        selectedNavItemHidden.classList.remove("fadeIn");
      }
      if (selectedNavItem) {
        selectedNavItem.classList.remove("hidden");
        selectedNavItem.classList.add("flex");
        selectedNavItem.classList.add("fadeIn");
      }
    };
    if (
      !whereWeAre ||
      !whereWeAreSection ||
      !sectionNavItems ||
      !whoWeAre ||
      !weProducts ||
      !headerClient
    )
      return;
    headerClient.addEventListener("mouseleave", () => {
      sectionNavItems.style.height = "0rem";
      selectedNavItem = null;
      updateSelectedNavItem();
    });
    whereWeAre.addEventListener("mouseenter", () => {
      sectionNavItems.style.height = "24rem";
      if (selectedNavItem === whereWeAreSection) return;
      selectedNavItem = whereWeAreSection;
      updateSelectedNavItem();
    });
    whoWeAre.addEventListener("mouseenter", () => {
      sectionNavItems.style.height = "24rem";
      selectedNavItem = document.querySelector("#WhoWeAreSection");
      updateSelectedNavItem();
    });
    weProducts.addEventListener("mouseenter", () => {
      sectionNavItems.style.height = "24rem";
      selectedNavItem = document.querySelector("#WeProductsSection");
      updateSelectedNavItem();
    });
  };
  initHeaderScript();
</script>
<style is:global>

  /* hidden for 1 seccond with displaynone and before flex */

  .hiddenTemp {
    display: flex;
    animation: hiddenTempAnimation .4s forwards;
  }

  @keyframes hiddenTempAnimation {
    0% {
      display: none;
    }

    90% {
      display: none;
    }

    100% {
      display: flex;
    }
  }



  .fadeIn {
    animation: fadeIn 0.5s ease-in-out;
  }

  .fadeOut {
    animation: fadeOut 0.3s ease-in-out;
  }

  @keyframes fadeOut {
    0% {
      opacity: 1;
    }

    100% {
      opacity: 0;
    }
  }

  @keyframes fadeIn {
    0% {
      opacity: 0;
    }

    50% {
      opacity: 0;
      transform: translateY(10px);
    }

    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
